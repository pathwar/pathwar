syntax = "proto3";

package pathwar.db;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "pathwar.land/go/pkg/pwdb";
option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message Challenge {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\" yaml:\"id,omitempty\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true, (gogoproto.moretags) = "yaml:\"created_at,omitempty\""];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true, (gogoproto.moretags) = "yaml:\"updated_at,omitempty\""];

  string name = 100;
  string description = 101;
  string author = 102;
  string locale = 103;
  bool is_draft = 104;
  string preview_url = 105 [(gogoproto.customname) = "PreviewURL"];
  string homepage = 106;
  string slug = 107 [(gogoproto.moretags) = "gorm:\"unique_index\""];
  // AuthorProfile
  // repeated string tags = ;

  repeated ChallengeFlavor flavors = 200 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\" yaml:\"flavors,omitempty\""];
}

message ChallengeFlavor {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\" yaml:\"id,omitempty\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true, (gogoproto.moretags) = "yaml:\"created_at,omitempty\""];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true, (gogoproto.moretags) = "yaml:\"updated_at,omitempty\""];

  string version = 100;
  string source_url = 104 [(gogoproto.customname) = "SourceURL"];
  string compose_bundle = 105 [(gogoproto.moretags) = "gorm:\"size:100000\""];
  Driver driver = 106 [(gogoproto.moretags) = "yaml:\"-\""];
  int64 purchase_price = 107 [(gogoproto.moretags) = "yaml:\"purchase_price\""];
  int64 validation_reward = 108 [(gogoproto.moretags) = "yaml:\"validation_reward\""];
  string slug = 109 [(gogoproto.moretags) = "gorm:\"unique_index\""];
  string body = 110;
  int64 passphrases = 111;
  string category = 112;
  repeated string tags = 113 [(gogoproto.moretags) = "gorm:\"-\""];
  string tag_list = 114 [(gogoproto.moretags) = "yaml:\"-\""];
  repeated RedumpPolicy redump_policy = 115 [(gogoproto.moretags) = "gorm:\"-\" yaml:\"redump-policy\""];
  string redump_policy_config = 116 [(gogoproto.moretags) = "yaml:\"-\""];

  Challenge challenge = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:ChallengeID\" yaml:\"challenge,omitempty\""];
  int64 challenge_id = 201 [(gogoproto.customname) = "ChallengeID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\" yaml:\"challenge_id,omitempty\""];
  repeated SeasonChallenge season_challenges = 202 [(gogoproto.moretags) = "gorm:\"PRELOAD:false;foreignkey:FlavorID\" yaml:\"season_challenges,omitempty\""];
  repeated ChallengeInstance instances = 203 [(gogoproto.moretags) = "gorm:\"PRELOAD:false;foreignkey:FlavorID\" yaml:\"instances,omitempty\""];
  //repeated ChallengeSubscription subscriptions = 203 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];

  message RedumpPolicy {
    string strategy = 1;
    string delay = 2 [(gogoproto.moretags) = "yaml:\"delay,omitempty\""];
  }

  enum Driver {
    Unknown = 0;
    Docker = 1;
    DockerCompose = 2;
    // Kubernetes
    // Static
  }
}

message SeasonChallenge {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  string slug = 100;
  int64 nb_validations = 101;

  ChallengeFlavor flavor = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:FlavorID\""];
  int64 flavor_id = 201 [(gogoproto.customname) = "FlavorID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index;unique_index:idx_seasonchallenge_flavor_season\""];
  Season season = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:SeasonID\""];
  int64 season_id = 203 [(gogoproto.customname) = "SeasonID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index;unique_index:idx_seasonchallenge_flavor_season\""];
  repeated ChallengeSubscription subscriptions = 204 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
}

message ChallengeInstance {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  Status status = 100;
  google.protobuf.Timestamp last_started_at = 101 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp last_stopped_at = 102 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp last_redump_requested_at = 103 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  string startup_error = 104;
  int64 redump_count = 105;
  int64 validation_count = 106;
  bytes instance_config = 107; // marshalled configuration containing the passphrases, etc
  // usage metrics to be updated by the agent (unique users, requests, etc)
  // timestamp last_marked_as_tainted
  // driver (docker)
  string slug = 108;

  Agent agent = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:AgentID\""];
  int64 agent_id = 201 [(gogoproto.customname) = "AgentID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  ChallengeFlavor flavor = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:FlavorID\""];
  int64 flavor_id = 203 [(gogoproto.customname) = "FlavorID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];

  /// non-db fields

  string nginx_url = 250 [(gogoproto.moretags) = "gorm:\"-\"", (gogoproto.customname) = "NginxURL"];

  enum Status {
    Unknown = 0;
    IsNew = 1;           // instance freshly created and never started before
    AcceptedByAgent = 2; // an agent accepted the job
    Available = 3;       // agent set the status at started
    NeedRedump = 4;      // instance needs to be restarted (broken)
    Disabled = 5;        // instance is disabled
    // Booting
  }
}

message Agent {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  string name = 100;
  string hostname = 101;
  string os = 102 [(gogoproto.customname) = "OS"];
  Status status = 103;
  string err_msg = 104;
  string arch = 105;
  string version = 106;
  string tags = 107;
  string domain_suffix = 108;
  int64 nginx_port = 109;
  string metadata = 110;
  int64 times_seen = 111;
  int64 times_registered = 112;
  google.protobuf.Timestamp last_registration_at = 113 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp last_seen_at = 114 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  string auth_salt = 115;
  bool default_agent = 116;
  string slug = 117;
  // FIXME: capabilities
  // FIXME: metrics -> cpu/memory/containers/etc


  repeated ChallengeInstance challenge_instances = 200 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];

  enum Status {
    Unknown = 0;
    Active = 1;
    Inactive = 2;
    Timeout = 3;
    Error = 4;
  }
}

message OrganizationMember {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  Role role = 100;
  string slug = 101;

  User user = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:UserID\""];
  int64 user_id = 201 [(gogoproto.customname) = "UserID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Organization organization = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:OrganizationID\""];
  int64 organization_id = 203 [(gogoproto.customname) = "OrganizationID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];

  enum Role {
    Undefined = 0;
    Owner = 1;
    Member = 2;
  }
}

message TeamMember {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  Role role = 100;
  string slug = 102;

  User user = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:UserID\""];
  int64 user_id = 201 [(gogoproto.customname) = "UserID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Team team = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamID\""];
  int64 team_id = 203 [(gogoproto.customname) = "TeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  repeated Coupon coupons = 204 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated Achievement achievements = 205 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated WhoswhoAttempt sent_whoswho_attempts = 206 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated WhoswhoAttempt received_whoswho_attempts = 207 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated InventoryItem items = 208 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated ChallengeValidation challenge_validations = 209 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];

  enum Role {
    Undefined = 0;
    Owner = 1;
    Member = 2;
  }
}

message TeamInvite {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp deleted_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  User user = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:UserID\""];
  int64 user_id = 201 [(gogoproto.customname) = "UserID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Team team = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamID\""];
  int64 team_id = 203 [(gogoproto.customname) = "TeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  string slug = 204;
}

// User defines a User Account / Profile
message User {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp deleted_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  string username = 100;
  string email = 101;
  string gravatar_url = 102 [(gogoproto.customname) = "GravatarURL"];
  string website_url = 103 [(gogoproto.customname) = "WebsiteURL"];
  string locale = 104;
  string oauth_subject = 105 [(gogoproto.customname) = "OAuthSubject", (gogoproto.moretags) = "gorm:\"unique_index\""];
  string deletion_reason = 106;
  DeletionStatus deletion_status = 107;
  string slug = 108;

  repeated TeamMember team_memberships = 200 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated Notification notifications = 201 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated OrganizationMember organization_memberships = 202 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  TeamMember active_team_member = 203 [(gogoproto.moretags) = "gorm:\"foreignkey:ActiveTeamMemberID;PRELOAD:false\""];
  int64 active_team_member_id = 204 [(gogoproto.customname) = "ActiveTeamMemberID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Season active_season = 205 [(gogoproto.moretags) = "gorm:\"foreignkey:ActiveSeasonID;PRELOAD:false\""];
  int64 active_season_id = 206 [(gogoproto.customname) = "ActiveSeasonID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
}

message Organization {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp deleted_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  string name = 100;
  string gravatar_url = 101 [(gogoproto.customname) = "GravatarURL"];
  string locale = 102;
  DeletionStatus deletion_status = 103;
  bool global_season = 104;
  string slug = 105;

  repeated Team teams = 200 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated WhoswhoAttempt received_whoswho_attempts = 201 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated OrganizationMember members = 202 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
}

message Season {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  string name = 100;
  Status status = 101;
  Visibility visibility = 102;
  Subscription subscription = 103;
  bool is_global = 104;
  string slug = 105;
  bool is_testing = 106;

  repeated Team teams = 200 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated Coupon coupons = 201 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];

  enum Status {
    UnknownStatus = 0;
    Started = 1;
    Stopped = 2;
  }
  enum Visibility {
    UnknownVisibility = 0;
    Private = 1;
    Unlisted = 2;
    Public = 3;
  }
  enum Subscription {
    UnknownSubscription = 0;
    Open = 1;
    Close = 2;
  }
}

message Team {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp deleted_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  bool is_global = 100;
  DeletionStatus deletion_status = 101;
  int64 cash = 102;
  int64 score = 103;
  int64 gold_medals = 104;
  int64 silver_medals = 105;
  int64 bronze_medals = 106;
  int64 nb_achievements = 107;
  string slug = 108;

  Season season = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:SeasonID\""];
  int64 season_id = 201 [(gogoproto.customname) = "SeasonID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index;unique_index:idx_team_season_organization\""];
  Organization organization = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:OrganizationID\""];
  int64 organization_id = 203 [(gogoproto.customname) = "OrganizationID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index;unique_index:idx_team_season_organization\""];
  repeated ChallengeSubscription challenge_subscriptions = 205 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated TeamMember members = 206 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
  repeated Achievement achievements = 207 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
}

message WhoswhoAttempt {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  bool success = 100;
  string slug = 101;


  User author = 200 [(gogoproto.moretags) = "sql:\"not null\" gorm:\"foreignkey:AuthorID\""];
  int64 author_id = 201 [(gogoproto.customname) = "AuthorID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Team author_team = 202 [(gogoproto.moretags) = "sql:\"not null\" gorm:\"foreignkey:AuthorTeamID\""];
  int64 author_team_id = 203 [(gogoproto.customname) = "AuthorTeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  User target_user = 204 [(gogoproto.moretags) = "sql:\"not null\" gorm:\"foreignkey:TargetUserID\""];
  int64 target_user_id = 205 [(gogoproto.customname) = "TargetUserID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Team target_team = 206 [(gogoproto.moretags) = "sql:\"not null\" gorm:\"foreignkey:TargetTeamID\""];
  int64 target_team_id = 207 [(gogoproto.customname) = "TargetTeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
}

message ChallengeValidation {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  Status status = 100;
  string author_comment = 101;
  string corrector_comment = 102;
  string passphrases = 105;
  string slug = 106;
  // FIXME: attachment

  ChallengeSubscription challenge_subscription = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:ChallengeSubscriptionID\""];
  int64 challenge_subscription_id = 201 [(gogoproto.customname) = "ChallengeSubscriptionID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  User author = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:AuthorID\""];
  int64 author_id = 203 [(gogoproto.customname) = "AuthorID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Team team = 204 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamID\""];
  int64 team_id = 205 [(gogoproto.customname) = "TeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];

  enum Status {
    Unknown = 0;
    NeedReview = 1;
    Accepted = 2;
    Refused = 3;
    AutoAccepted = 4;
  }
}

message ChallengeSubscription {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  Status status = 100;
  google.protobuf.Timestamp closed_at = 101 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  string slug = 102;


  Team team = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamID\""];
  int64 team_id = 201 [(gogoproto.customname) = "TeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"unique_index:idx_team_season_challenge\""];
  SeasonChallenge season_challenge = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:SeasonChallengeID\""];
  int64 season_challenge_id = 203 [(gogoproto.customname) = "SeasonChallengeID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"unique_index:idx_team_season_challenge\""];
  User buyer = 204 [(gogoproto.moretags) = "gorm:\"foreignkey:BuyerID\""];
  int64 buyer_id = 205 [(gogoproto.customname) = "BuyerID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  User closer = 206 [(gogoproto.moretags) = "gorm:\"foreignkey:CloserID\""];
  int64 closer_id = 207 [(gogoproto.customname) = "CloserID", (gogoproto.moretags) = "sql:\"null\" gorm:\"index\""];
  repeated ChallengeValidation validations = 208 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];

  enum Status {
    Unknown = 0;
    Active = 1;
    Closed = 2;
  }
}

message InventoryItem {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  Item item = 100;
  string slug = 101;

  TeamMember owner = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:OwnerID\""];
  int64 owner_id = 201 [(gogoproto.customname) = "OwnerID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];

  enum Item {
    Unknown = 0;
  }
}


message Notification {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  google.protobuf.Timestamp read_at = 100 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  string click_url = 101 [(gogoproto.customname) = "ClickURL"];
  string msg = 102;
  string args = 103; // marshaled args
  // FIXME: get inspiration from push notifications

  User user = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:UserID\""];
  int64 user_id = 201 [(gogoproto.customname) = "UserID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
}

message Coupon {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  string hash = 100 [(gogoproto.moretags) = "gorm:\"unique_index\""];
  int64 value = 101;
  int64 max_validation_count = 102;

  Season season = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:SeasonID\""];
  int64 season_id = 201 [(gogoproto.customname) = "SeasonID", (gogoproto.moretags) = "gorm:\"index\""];
  repeated CouponValidation validations = 202 [(gogoproto.moretags) = "gorm:\"PRELOAD:false\""];
}

message CouponValidation {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  string comment = 100;

  User author = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:AuthorID\""];
  int64 author_id = 201 [(gogoproto.customname) = "AuthorID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Team team = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamID\""];
  int64 team_id = 203 [(gogoproto.customname) = "TeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Coupon coupon = 204 [(gogoproto.moretags) = "gorm:\"foreignkey:CouponID\""];
  int64 coupon_id = 205 [(gogoproto.customname) = "CouponID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
}

message Achievement {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  Type type = 100;
  bool is_global = 101;
  string comment = 102;
  string argument = 103;
  string slug = 104;

  User author = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:AuthorID\""];
  int64 author_id = 201 [(gogoproto.customname) = "AuthorID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Team team = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamID\""];
  int64 team_id = 203 [(gogoproto.customname) = "TeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  ChallengeValidation challenge_validation = 204 [(gogoproto.moretags) = "gorm:\"foreignkey:ChallengeValidationID\""];
  int64 challenge_validation_id = 205 [(gogoproto.customname) = "ChallengeValidationID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];

  enum Type {
    Undefined = 0;
    Buy1Challenge = 1;
    Buy5Challenges = 2;
    Buy10Challenges = 3;
    Buy20Challenges = 4;
    Buy50Challenges = 5;
    Validate1Challenge = 10;
    Validate5Challenges = 11;
    Validate10Challenges = 12;
    Validate20Challenges = 13;
    Validate50Challenges = 14;
    Validate1Coupon = 20;
    Validate5Coupons = 21;
    Validate10Coupons = 22;
    Validate20Coupons = 23;
    Validate50Coupons = 24;
    Validate100Coupons = 25;
    Author1Challenge = 30;
    Author2Challenges = 31;
    Author5Challenges = 32;
    Author10Challenges = 33;
    EarlyAdopterTop100 = 40;
    EarlyAdopterTop1000 = 41;
    reserved 42;
    Old1Year = 50;
    Old2Years = 51;
    Send1PullRequest = 90;
    Send2PullRequests = 91;
    Send5PullRequests = 92;
    Send10Pullrequests = 93;
    Staff = 100;
    Contributor = 101;
    BugHunter = 102;
    Moderator = 103;
    HackThePlatform = 104;
    // Special = 99;
  }
}

message Activity {
  int64 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key\"", (gogoproto.customname) = "ID"];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];

  Kind kind = 100;

  User author = 200 [(gogoproto.moretags) = "gorm:\"foreignkey:AuthorID\""];
  int64 author_id = 201 [(gogoproto.customname) = "AuthorID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];

  Team team = 202 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamID\""];
  int64 team_id = 203 [(gogoproto.customname) = "TeamID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  User user = 204 [(gogoproto.moretags) = "gorm:\"foreignkey:UserID\""];
  int64 user_id = 205 [(gogoproto.customname) = "UserID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Organization organization = 206 [(gogoproto.moretags) = "gorm:\"foreignkey:OrganizationID\""];
  int64 organization_id = 207 [(gogoproto.customname) = "OrganizationID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Season season = 208 [(gogoproto.moretags) = "gorm:\"foreignkey:SeasonID\""];
  int64 season_id = 209 [(gogoproto.customname) = "SeasonID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Challenge challenge = 210 [(gogoproto.moretags) = "gorm:\"foreignkey:ChallengeID\""];
  int64 challenge_id = 211 [(gogoproto.customname) = "ChallengeID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  ChallengeFlavor challenge_flavor = 212 [(gogoproto.moretags) = "gorm:\"foreignkey:ChallengeFlavorID\""];
  int64 challenge_flavor_id = 213 [(gogoproto.customname) = "ChallengeFlavorID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Coupon coupon = 214 [(gogoproto.moretags) = "gorm:\"foreignkey:CouponID\""];
  int64 coupon_id = 215 [(gogoproto.customname) = "CouponID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  SeasonChallenge season_challenge = 216 [(gogoproto.moretags) = "gorm:\"foreignkey:SeasonChallengeID\""];
  int64 season_challenge_id = 217 [(gogoproto.customname) = "SeasonChallengeID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  TeamMember team_member = 218 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamMemberID\""];
  int64 team_member_id = 219 [(gogoproto.customname) = "TeamMemberID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  ChallengeSubscription challenge_subscription = 220 [(gogoproto.moretags) = "gorm:\"foreignkey:ChallengeSubscriptionID\""];
  int64 challenge_subscription_id = 221 [(gogoproto.customname) = "ChallengeSubscriptionID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  ChallengeInstance challenge_instance = 222 [(gogoproto.moretags) = "gorm:\"foreignkey:ChallengeInstanceID\""];
  int64 challenge_instance_id = 223 [(gogoproto.customname) = "ChallengeInstanceID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Agent agent = 224 [(gogoproto.moretags) = "gorm:\"foreignkey:AgentID\""];
  int64 agent_id = 225 [(gogoproto.customname) = "AgentID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  Agent team_invite = 226 [(gogoproto.moretags) = "gorm:\"foreignkey:TeamInviteID\""];
  int64 team_invite_id = 227 [(gogoproto.customname) = "TeamInviteID", (gogoproto.moretags) = "sql:\"not null\" gorm:\"index\""];
  // agent
  // inventoryitem
  // couponvalidation
  // challengeinstance
  // challengevalidation
  // organizationmember

  enum Kind {
    Unknown = 0;
    UserRegister = 1;
    UserLogin = 2;
    UserSetPreferences = 3;
    UserDeleteAccount = 4;
    SeasonChallengeBuy = 5;
    ChallengeSubscriptionValidate = 6;
    CouponValidate = 7;
    AgentRegister = 8;
    AgentChallengeInstanceCreate = 9;
    AgentChallengeInstanceUpdate = 10;
    TeamCreation = 11;
    TeamInviteSend = 12;
    TeamInviteAccept = 13;
  }
}

message Dump {
  repeated Achievement achievements = 1;
  repeated Challenge challenges = 2;
  repeated ChallengeFlavor challenge_flavors = 3;
  repeated ChallengeInstance challenge_instances = 4;
  repeated ChallengeSubscription challenge_subscriptions = 5;
  repeated ChallengeValidation challenge_validations = 6;
  repeated Coupon coupons = 7;
  repeated CouponValidation coupon_validations = 8;
  repeated Agent agents = 9;
  repeated InventoryItem inventory_items = 10;
  repeated Notification notifications = 11;
  repeated Organization organizations = 12;
  repeated OrganizationMember organization_members = 13;
  repeated Season seasons = 14;
  repeated SeasonChallenge season_challenges = 15;
  repeated Team teams = 16;
  repeated TeamMember team_members = 17;
  repeated User users = 18;
  repeated WhoswhoAttempt whoswho_attempts = 19;
}

message Info {
  map<string, uint32> table_rows = 1;
}

enum DeletionStatus {
  Unknown = 0;
  Active = 1;     // for a non-deleted content
  Requested = 2;  // recent deletion request, not yet fully deleted
  Anonymized = 3; // final step of Deletion for content that cannot be deleted
}

message AgentList { repeated Agent items = 1; }
message ChallengeList { repeated Challenge items = 1; }
message SeasonChallengeList { repeated SeasonChallenge items = 1; }
message UserList { repeated User items = 1; }
message OrganizationList { repeated Organization items = 1; }
message SeasonList { repeated Season items = 1; }
message TeamList { repeated Team items = 1; }
message ActivityList { repeated Activity items = 1; }
